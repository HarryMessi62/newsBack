const cron = require('cron');
const NewsParser = require('./newsParser');
const ParserSettings = require('../models/ParserSettings');

class Scheduler {
  constructor() {
    this.parserJob = null;
    this.isRunning = false;
    this.currentParser = null;
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  async init() {
    try {
      console.log('üïí –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
      const settings = await ParserSettings.findOne({});
      if (settings && settings.parser.enabled) {
        await this.scheduleParser();
        console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–∞—Ä—Å–µ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
      } else {
        console.log('‚è∏Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error);
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞
  async scheduleParser() {
    try {
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É
      if (this.parserJob) {
        this.parserJob.stop();
        this.parserJob.destroy();
      }

      const settings = await ParserSettings.findOne({});
      if (!settings || !settings.parser.enabled) {
        console.log('‚èπÔ∏è –ü–∞—Ä—Å–µ—Ä –æ—Ç–∫–ª—é—á–µ–Ω, –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        return;
      }

      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ cron-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ
      const cronExpression = this.convertToCron(settings.parser.schedule);
      
      console.log(`üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞: ${settings.parser.schedule} (${cronExpression})`);

      this.parserJob = new cron.CronJob(
        cronExpression,
        async () => {
          await this.runParser();
        },
        null,
        true,
        'Europe/Moscow'
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
      settings.calculateNextRun();
      await settings.save();

      console.log(`‚è∞ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞: ${settings.stats.nextRunAt?.toLocaleString('ru-RU')}`);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞:', error);
    }
  }

  // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –≤ cron-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ
  convertToCron(schedule) {
    const cronExpressions = {
      '15min': '*/15 * * * *',  // –ö–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
      '30min': '*/30 * * * *',  // –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
      '1h': '0 * * * *',        // –ö–∞–∂–¥—ã–π —á–∞—Å
      '2h': '0 */2 * * *',      // –ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞
      '4h': '0 */4 * * *',      // –ö–∞–∂–¥—ã–µ 4 —á–∞—Å–∞
      '8h': '0 */8 * * *',      // –ö–∞–∂–¥—ã–µ 8 —á–∞—Å–æ–≤
      '12h': '0 */12 * * *',    // –ö–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤
      '24h': '0 0 * * *'        // –ö–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (–≤ –ø–æ–ª–Ω–æ—á—å)
    };

    return cronExpressions[schedule] || cronExpressions['4h'];
  }

  // –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
  async runParser() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É–∂–µ –ø–∞—Ä—Å–∏–Ω–≥
    if (this.isRunning) {
      console.log('‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–ø—É—Å–∫');
      return;
    }

    try {
      this.isRunning = true;
      console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      const settings = await ParserSettings.findOne({});
      if (!settings || !settings.parser.enabled) {
        console.log('‚èπÔ∏è –ü–∞—Ä—Å–µ—Ä –æ—Ç–∫–ª—é—á–µ–Ω, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
        await this.stop();
        return;
      }

      // –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä
      this.currentParser = new NewsParser();
      await this.currentParser.init();
      
      const result = await this.currentParser.parseNews({
        manual: false
      });

      console.log(`‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω: ${result.articlesSuccess}/${result.articlesProcessed} —É—Å–ø–µ—à–Ω–æ`);

      // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
      const updatedSettings = await ParserSettings.findOne({});
      if (updatedSettings.parser.schedule !== settings.parser.schedule) {
        console.log('üìÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...');
        await this.scheduleParser();
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –æ—à–∏–±–∫–µ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email)
      await this.notifyError(error);
      
    } finally {
      this.isRunning = false;
      this.currentParser = null;
    }
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞
  async stop() {
    try {
      console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞...');
      
      if (this.parserJob) {
        this.parserJob.stop();
        this.parserJob.destroy();
        this.parserJob = null;
      }

      // –ï—Å–ª–∏ –ø–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –∂–¥–µ–º –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
      if (this.isRunning && this.currentParser) {
        console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
      }

      console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–∞—Ä—Å–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error);
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
  async updateSchedule() {
    try {
      console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞...');
      await this.scheduleParser();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', error);
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  getStatus() {
    return {
      isActive: !!this.parserJob,
      isRunning: this.isRunning,
      nextRun: this.parserJob ? this.parserJob.nextDate() : null,
      jobExists: !!this.parserJob
    };
  }

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  async notifyError(error) {
    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ email
      // –∏–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      console.log('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–µ—Ä–∞:', error.message);
      
      // –ú–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤ —Ñ–∞–π–ª –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã
    } catch (notifyError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notifyError);
    }
  }

  // –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  async manualRun(options = {}) {
    if (this.isRunning) {
      throw new Error('–ü–∞—Ä—Å–µ—Ä —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
    }

    try {
      this.isRunning = true;
      console.log('üéØ –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...');

      const parser = new NewsParser();
      await parser.init();
      
      const result = await parser.parseNews({
        manual: true,
        ...options
      });

      console.log(`‚úÖ –†—É—á–Ω–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω: ${result.articlesSuccess}/${result.articlesProcessed} —É—Å–ø–µ—à–Ω–æ`);
      return result;

    } finally {
      this.isRunning = false;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ª–∂–µ–Ω –ª–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø–∞—Ä—Å–µ—Ä
  static async shouldRun() {
    try {
      return await NewsParser.shouldRun();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞:', error);
      return false;
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
const scheduler = new Scheduler();

module.exports = scheduler; 