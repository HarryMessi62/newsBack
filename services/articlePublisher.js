const cron = require('cron');
const Article = require('../models/Article');

class ArticlePublisher {
  constructor() {
    this.job = null;
    this.isRunning = false;
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  async init() {
    if (this.job) {
      this.job.stop();
      this.job = null;
    }

    // –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    this.job = new cron.CronJob(
      '*/1 * * * *',
      async () => {
        if (this.isRunning) return;
        this.isRunning = true;
        try {
          const now = new Date();
          // –ò—â–µ–º —Å—Ç–∞—Ç—å–∏, —Å—Ä–æ–∫ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Å—Ç—É–ø–∏–ª
          const articles = await Article.find({
            status: 'scheduled',
            scheduledAt: { $lte: now }
          });

          for (const article of articles) {
            article.status = 'published';
            article.publishedAt = article.scheduledAt || now;
            await article.save();
            console.log(`üì¢ –°—Ç–∞—Ç—å—è ¬´${article.title}¬ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (${article._id})`);
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π:', error);
        } finally {
          this.isRunning = false;
        }
      },
      null,
      true,
      'Europe/Moscow'
    );

    console.log('üïí –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)');
  }

  async stop() {
    if (this.job) {
      this.job.stop();
      this.job = null;
      console.log('‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  }
}

module.exports = new ArticlePublisher(); 