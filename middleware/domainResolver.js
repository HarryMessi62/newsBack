const Domain = require('../models/Domain');

/**
 * Middleware –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–æ–º–µ–Ω–∞ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É Host
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ–Ω–µ –≤ req.currentDomain
 */
const resolveDomain = async (req, res, next) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ö–æ—Å—Ç –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const host = req.get('host') || req.get('x-forwarded-host') || req.hostname;
    
    if (!host) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ö–æ—Å—Ç');
      return next();
    }

    // –£–±–∏—Ä–∞–µ–º –ø–æ—Ä—Ç –∏–∑ —Ö–æ—Å—Ç–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    const cleanHost = host.split(':')[0];
    
    console.log(`üåê –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–µ–Ω –¥–ª—è —Ö–æ—Å—Ç–∞: ${cleanHost}`);

    // –ò—â–µ–º –¥–æ–º–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π URL —Ç–∞–∫ –∏ –∞–ª–∏–∞—Å—ã
    const domain = await Domain.findOne({
      $or: [
        { url: { $regex: cleanHost, $options: 'i' } },
        { 'settings.aliases': { $in: [cleanHost] } }
      ],
      status: 'active'
    });

    if (domain) {
      req.currentDomain = domain;
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –¥–æ–º–µ–Ω: ${domain.name} (ID: ${domain._id})`);
    } else {
      console.log(`‚ùå –î–æ–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ö–æ—Å—Ç–∞: ${cleanHost}`);
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –¥–æ–º–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      req.currentDomain = null;
    }

    next();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞:', error);
    req.currentDomain = null;
    next();
  }
};

module.exports = resolveDomain; 